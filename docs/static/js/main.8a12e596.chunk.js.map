{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","onMouseEnter","remove","add","classList","parentElement","console","log","contains","setTimeout","handleMouseEnter","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAOd,+BAAMD,EAAN,KACA,2BACIQ,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,Y,uBCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCgBPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,yBACAc,UAAU,gDACVC,aAAc,SAAC3B,IAlBS,SAACA,EAAG4B,EAAQC,GACxC7B,EAAEC,iBACF,IAAM6B,EAAc9B,EAAEQ,OAAOuB,cAAvBD,UACNE,QAAQC,IAAIH,GACRA,EAAUI,SAASN,IACnBE,EAAUF,OAAOA,GAGrBE,EAAUD,IAAIA,GACdM,YAAW,WACPL,EAAUF,OAAOC,KAClB,KAQKO,CAAiBpC,EAAG,yBAA0B,mBAG9C,yBAAKqC,IAAKzB,EAAK0B,IAAKhB,IACpB,+BAAKA,EAAL,OCpBCiB,EAAU,SAAC,GAAkB,IAAhB7B,EAAe,EAAfA,SAEtB,ECJwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNuB,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAW,WAEPlC,EAASC,GACJkC,MAAM,SAAAC,GAEHH,EAAS,CACLzB,KAAM4B,EACNL,SAAS,SAItB,CAAC9B,IAKG+B,EDnB0BK,CAAcpC,GAAlCa,EAAb,EAAQN,KAAauB,EAArB,EAAqBA,QAcrB,OACI,oCACI,wBAAId,UAAU,oCAAoCC,aAAc,SAAC3B,IAfhD,SAACA,EAAG4B,EAAQC,GACjC7B,EAAEC,iBACF,IAAM6B,EAAc9B,EAAEQ,OAAhBsB,UACNE,QAAQC,IAAIH,GACRA,EAAUI,SAASN,IACnBE,EAAUF,OAAOA,GAErBE,EAAUD,IAAIA,GACdM,YAAW,WACPL,EAAUF,OAAOC,KAClB,KAMKO,CAAiBpC,EACb,kBACA,qBAHR,IAIMU,EAJN,KAME8B,GAAW,uBAAGd,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aAGPH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACI2B,IAAM3B,EAAIC,IACLD,UElCpB4B,EAAe,SAAC,GAAgC,IAAD,IAA7BC,yBAA6B,MAAT,GAAS,EAGxD,EAAoCrD,mBAAUqD,GAA9C,mBAAOC,EAAP,KAAmBvD,EAAnB,KAEA,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEQuD,EAAW/B,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACIqC,IAAMrC,EACNA,SAAWA,U,MCbvCyC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.8a12e596.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState(''); // ''\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [ inputValue, ...cats, ] );\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <p> { inputValue } </p>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=A8xMXqzieIHmtO3BjGLAtf1daSSDAv8K`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const handleMouseEnter = (e, remove, add) => {\r\n    e.preventDefault();\r\n    let { classList } = e.target.parentElement;\r\n    console.log(classList);\r\n    if (classList.contains(remove)) {\r\n        classList.remove(remove);\r\n        \r\n    }\r\n    classList.add(add);\r\n    setTimeout(() => {\r\n        classList.remove(add);\r\n    }, 1000);\r\n};\r\nexport const GifGridItem = ({ title, url }) => {\r\n    \r\n    return (\r\n        <div\r\n        className=\"card animate__animated animate__fadeInDownBig\"\r\n        onMouseEnter={(e) => {\r\n            handleMouseEnter(e, 'animate__fadeInDownBig', 'animate__tada');\r\n        }}\r\n        >\r\n            <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n    const handleMouseEnter = (e, remove, add) => {\r\n        e.preventDefault();\r\n        let { classList } = e.target;\r\n        console.log(classList);\r\n        if (classList.contains(remove)) {\r\n            classList.remove(remove);\r\n        }\r\n        classList.add(add);\r\n        setTimeout(() => {\r\n            classList.remove(add);\r\n        }, 800);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__shakeY\" onMouseEnter={(e) => {\r\n                handleMouseEnter(e,\r\n                    'animate__shakeY',\r\n                    'animate__shakeY')\r\n            }}> { category } </h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n\r\n    return state; // { data:[], loading: true };\r\n\r\n\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = ({ defaultCategories = [] }) => {\r\n    \r\n    // const [categories, setCategories] = useState(['One Punch']);\r\n    const [categories, setCategories] = useState( defaultCategories );\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category  => (\r\n                        <GifGrid \r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { GifExpertApp } from './GifExpertApp';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <GifExpertApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}